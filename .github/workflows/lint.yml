name: Lint

on:
  pull_request:
    branches:
      - main

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: false

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m --out-format json > golangci-lint-results.json
          only-new-issues: true

      - name: Comment on PR
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.INDIE_GITHUB_TOKEN }} 
          script: |
            const fs = require('fs');
            try {
              const rawData = fs.readFileSync('golangci-lint-results.json', 'utf8');
              const output = JSON.parse(rawData);
              
              if (!output.Issues || output.Issues.length === 0) {
                return;
              }

              const header = '## üîç Linting Issues Found\n\n';
              const summary = `Found ${output.Issues.length} issue${output.Issues.length > 1 ? 's' : ''}\n\n`;
              
              const comments = output.Issues.map(issue => {
                const severity = issue.Severity === 'error' ? '‚ùå' : '‚ö†Ô∏è';
                return [
                  `### ${severity} ${issue.Text}`,
                  '```',
                  `File: ${issue.Pos.Filename}:${issue.Pos.Line}`,
                  `Rule: ${issue.FromLinter}`,
                  '```'
                ].join('\n');
              }).join('\n\n');
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: header + summary + comments
              });
            } catch (error) {
              console.error('Error processing lint results:', error);
              core.setFailed('Failed to process lint results');
            } 